General theory of this talk:
* dense, sparks a lot of ideas
* Each bit is: Here's the problem, here's the solution.

# Creative Coding
screen: animated plasma + source code.

"Creative Coding" is the act of writing a computer program to make art.
It is a fun and rewarding way to learn computer programming.
You can write simple programs and get immediate visual feedback,
and even bugs can lead to interesting results.
  
# 3D Printed Generative Art
screen: Shrek's Donut

3D printers are cool, but they are even cooler if you can design and print
your own art.
I use Creative Coding to generate abstract, 3D printed geometric art.
This is something you can do, too, even if you don't have conventional
artist skills.

This (wave at screen) is called Generative Art.
Instead of drawing a picture,
you are writing a computer program to generate a picture for you.
The advantage is that the computer can generate imagery that is way more
complex and precise than anything you could easily do by hand.

# Parametric Design
screen: parametric model

It's also called "Parametric Design", because you define
numeric parameters that control what gets generated. By tweaking the parameters,
you can explore a design space and find the one that best expresses your
artistic goals.

demo: tweaking parameters.

------
I make trippy, abstract geometric art using a 3D printer.
I write programs to generate the designs. This is called "Generative Art".
It's also called "Parametric Design", because you define
numeric parameters that control what gets generated. By tweaking the parameters,
you can explore a design space and find the one that best expresses your
artistic goals.

Sometimes, in Creative Coding, the source code for the program is considered
to be a part of the art work. I want to write short, beautiful programs, and
share them so that other people can understand and modify them.

I wanted an easy, open source tool for writing these programs
and generating 3D printable model files. Nothing existing supported the
full range of modelling techniques I wanted to explore,
so I started my own open source project.
-------
I use Creative Coding to generate abstract, 3D printed geometric art.
This is called "Generative Art".
It's also called "Parametric Design", because you define
numeric parameters that control what gets generated. By tweaking the parameters,
you can explore a design space and find the one that best expresses your
artistic goals.

For my work, I created an open source tool and language called Curv.
It lets me write short, beautiful programs that I share with other
people (because the source code is part of the art work).
And it supports a wide range of 3D modelling techniques,
which I will demo during this talk.
-------
I want to share my ideas and inspire other people.
* 3D printers are cool, but they are even cooler if you can design and print
  your own art. The approach I use is accessible to people without conventional
  artistic skills, and I want to raise awareness.
