amap rank func args

`amap` takes a function of one or more arguments and "vectorizes" it,
generalizing it so that each argument can be a multi-dimensional array
of values, instead of a single value.

If the function takes one argument, then `args` is that argument, containing
either a single argument value, or an array of argument values.
In this case, `rank` is a natural number, which is the array rank of a
single argument value. A rank of 0 means that the function is applied to
each scalar in the array `args`.

If the function takes N arguments, then `args` is a list of N elements.
`rank` is a list of N natural numbers: the i'th rank is the array rank
of the i'th argument value.

`amap` is closely related to the Rank operator in APL.

numpy.vectorize is similar (although the API is a mess).
https://docs.scipy.org/doc/numpy/reference/generated/numpy.vectorize.html

------
What if a 'rank' ordinal is replaced by a type value, and types contain
a rank, or the predicate is used to identify type instances?
That seems more abstract/higher level.
