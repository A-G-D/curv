A string is a list of characters.

Add a "character" data type.
 * `char n` converts the code point n to a character value. (Vectorized.)
 * `ucode c` converts the character c to a code point integer. (Vectorized.)
 * deprecate `encode` and `decode`

A character string literal "abc" is semantically a list of characters.
Internally we'll retain the String data type.
 * "ab" == [char 97, char 98]
 * add the a++b infix concat operator
 * concat supports a mixture of Strings and Lists
   * List_Builder returns either a String or a List
 * "" prints as []
 * concat["abc",[1,2,3]] prints as "abc"++[1,2,3] but is represented
   internally as a List
 * a==b and equal[a,b] treat strings and lists as equivalent
 * "abc"[[0,[1,2]]] == "abc"@[0,[1,2]] == "a"++["bc"]
 * do local a = "abc"; a[0] := 42 in a==[42]++"bc"
