assert(is_list 0 == false);
assert(is_list[]);

assert(bit(false)==0 && bit(true)==1);

assert( dot( [], []) == 0 );
assert( dot( [1,2], [3,4]) == 11 );
assert( dot( [[1,2],[3,4]], [[2,0],[1,2]]) == [[4,4],[10,8]] );
assert( dot( [[1,2,3],[4,5,6]], [9,8,7] ) == [46,118] );
assert( dot( [1,2,3], [[2,1,3],[3,3,2],[4,1,2]] ) == [20,10,13] );
assert(
    dot( [[[1],[2]],[[3],[4]]], [[1,2]] )
    == [[[1,2],[2,4]],[[3,6],[4,8]]]
    );

assert(identity 3 ==
  [[1,0,0],
   [0,1,0],
   [0,0,1]] );

assert((let(a=1,b=2,c=let(x=10,y=20)[x,y])[a,b,c]) == [1,2,[10,20]]);

let(r={a=1})
assert(defined r.a && !defined(r.b));

assert(0..<5 == [0,1,2,3,4]);

assert(reverse[1,2,3] == [3,2,1] && reverse[] == []);
assert(sum[1,2,3]==6 && sum[]==0);
