// cheap; mitred distance field
box b = make_shape {
    dist p : max(abs p - b),
    bbox : [-b,b],
    is_3d : true,
};
// more expensive; euclidean distance field
box_eu b = make_shape {
    dist p : (
        var d := abs p - b;
        min(max d, 0) + mag(max(d,0))
    ),
    bbox : [-b,b],
    is_3d : true,
};

rect b = make_shape {
    dist p : max(abs(p[X,Y]) - b),
    bbox : [[-b[X],-b[Y],0],[b[X],b[Y],0]],
    is_2d : true,
};
rect_eu b = make_shape {
    dist p : (
        var d := abs(p[X,Y]) - b;
        min(max d, 0) + mag(max(d,0))
    ),
    bbox : [[-b[X],-b[Y],0],[b[X],b[Y],0]],
    is_2d : true,
};
box_eu(2,1.5,1) //>> slice_xy >> distance_field
