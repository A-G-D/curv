// Credit: Patricio Gonzalez 2015 https://thebookofshaders.com/13/

let
random xy = mod(sin(dot(xy, (12.9898,78.233)))*43758.5453123, 1);

// Based on Morgan McGuire @morgan3d
// https://www.shadertoy.com/view/4dS3Wd
noise xy =
    let i = floor xy;
        f = xy - i;

        // Four corners in 2D of a tile
        a = random(i);
        b = random(i + (1, 0));
        c = random(i + (0, 1));
        d = random(i + (1, 1));

        u = f * f * (3 - 2 * f);

    in lerp(a, b, u[X]) + 
        (c - a)* u[Y] * (1 - u[X]) + 
        (d - b) * u[X] * u[Y];

fbm xy =
    let shift = [100,100];
        rot = cis(0.5);   // Rotate to reduce axial bias
    in do
        var st := xy;
        var v := 0;
        var a := 0.5;
        for (i in 1..5) (
            v := v + a * noise st;
            st := cmul(rot, st) * 2 + shift;
            a := a * 0.5;
        );
    in v;

smoke3(x,y,z,t) =
    let st = (x,y);
        q = [ fbm(st), fbm(st + 1) ];
        r = [ fbm(st + q + [1.7,9.2] + 1.50*z),
              fbm(st + q + [8.3,2.8] + 1.26*z) ];
        f = fbm(st + r);
    in do
        var c := lerp([0.101961,0.619608,0.666667],
                     [0.666667,0.666667,0.498039],
                     clamp((f*f)*4.0,0.0,1.0));
        c := lerp(c,
                 [0,0,0.164706],
                 clamp(mag q, 0, 1));
        c := lerp(c,
                 [0.666667,1,1],
                 clamp(r[X], 0, 1));
    in (f*f*f+.6*f*f+.5*f)*c;

in
cube 2 >> colour smoke3
