// Credit: Patricio Gonzalez 2015 https://thebookofshaders.com/13/

random xy = mod(sin(dot(xy, (12.9898,78.233)))*43758.5453123, 1);

// Based on Morgan McGuire @morgan3d
// https://www.shadertoy.com/view/4dS3Wd
noise xy = (
    var i := floor xy;
    var f := xy - i;

    // Four corners in 2D of a tile
    var a := random(i);
    var b := random(i + (1, 0));
    var c := random(i + (0, 1));
    var d := random(i + (1, 1));

    var u := f * f * (3 - 2 * f);

    lerp(a, b, u'X) + 
        (c - a)* u'Y * (1 - u'X) + 
        (d - b) * u'X * u'Y
);

fbm xy = (
    var st := xy;
    var v := 0;
    var a := 0.5;
    var shift := [100,100];
    // Rotate to reduce axial bias
    var rot := cis(0.5);
    for (i in [1..5]) (
        v := v + a * noise st;
        st := cmul(rot, st) * 2 + shift;
        a := a * 0.5;
    );
    v
);

smoke = (x,y,z,t) -> (
    var st := (x,y);
    var q := [ fbm(st), fbm(st + 1) ];
    var r := [ fbm(st + q + [1.7,9.2] + 0.150*t),
               fbm(st + q + [8.3,2.8] + 0.126*t) ];
    var f := fbm(st + r);
    var c := lerp([0.101961,0.619608,0.666667],
                 [0.666667,0.666667,0.498039],
                 clamp((f*f)*4.0,0.0,1.0));
    c := lerp(c,
             [0,0,0.164706],
             clamp(mag q, 0, 1));
    c := lerp(c,
             [0.666667,1,1],
             clamp(r[X], 0, 1));
    (f*f*f+.6*f*f+.5*f)*c
);

cnoise = (x,y,z,t) -> (var n := clamp(noise(x,y),0,1); (n,n,n));
rnoise = (x,y,z,t) -> (var n := clamp(noise(x,y),0,1); hsv2rgb(n,1,1));
rfbm = (x,y,z,t) -> (var n := clamp(fbm(x,y),0,1); hsv2rgb(n,1,1));

//circle 1 >> colour smoke
//everything >> colour rnoise
everything >> colour rfbm
