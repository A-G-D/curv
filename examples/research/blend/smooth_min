// polynomial smooth min, credit: Inigo Quilez
// http://www.iquilezles.org/www/articles/smin/smin.htm
smooth_min(a,b,k) =
(
    var h := clamp( 0.5+0.5*(b-a)/k, 0, 1 );
    lerp( b, a, h ) - k*h*(1.0-h)
);

// Note: smooth_min is the same function as Media Molecule's soft_min,
// but soft_min looks more efficient.
/*
soft_min(a, b, r) = (
    var e := max(r - abs(a - b), 0);
    min(a, b) - e*e*0.25/r
);
*/

make_shape {
    dist p = smooth_min(p[X],p[Y],1),
    is_2d = true,
} >> distance_field
